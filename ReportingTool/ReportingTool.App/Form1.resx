<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="stiPrint.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALGJiQ2xiYkNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1iooYv4qKGPnj41P55OSs+eTk1vnk
        5Nb55OSr+ePjUf///wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/93dD/rk5Lr55OT/+eTk//nk
        5P/55OT/+eTk//nk5P/55eW3gtT0L1zM/xkAAAAAAAAAAAAAAAAAAAAA////Avrk5Lu2tb7/mZyo/46W
        ov+OlqL/jpai/46Wov+SlqP/ra+4//Dk5rpg3/8IAAAAAAAAAAAAAAAAVc7/FXrS97b45OT/xMvR/6iw
        uf+eqK//l6Oq/5eiqf+Xoqn/naat/8PO1P/55OT/+eTkVAAAAAAAAAAAAAAAAFXV/wyn2vDT+eTk/8TL
        0f+jq7X/jpmi/5Sgp/+OmaL/jpmi/5agqf/DztT/+eTk//nj47AAAAAAAAAAAAAAAAAAAAAA/PHx7vnk
        5P/Ey9H/o6u1/5WfqP+OmaL/l6Ks/46Zov+XoKn/w87U//nk5P/54+PeAAAAAAAAAAAAAAAAAAAAAPnk
        5N/55OT/xMvR/9Xh5f/K1tr/ytba/8rW2v/K1tr/0Nvg/8PO1P/55OT/+ePj3gAAAAAAAAAAAAAAAAAA
        AAD55OSz79ve/7C3v//s+Pr/7/z9/6enh/+fnXb/7/z9/+n2+P+ttr//7Njc//nj47AAAAAAAAAAAAAA
        AAAAAAAA+eXlWMi2y/9WUJr/ammn/6+6xv/H09f/vsrR/7bByv93eK//VlGb/6+hw//55ORUAAAAAAAA
        AAAAAAAAAAAAAP///wL65OS79+Lj/7Okwv9nXqT/Xlqg/2RhpP9jXaP/ppm+//Tg4f/76Oi+zJmZCqqq
        qgMAAAAAAAAAAAAAAAAAAAAA/93dD/rk5Lr55OT/+eTk/+LP1v/Yxs//+eTk//nk5P/55eW3/+3tDrmG
        hii/jIwUAAAAAAAAAAAAAAAAAAAAAAAAAAD///8B+ePjU/nj47n55OTd+eTk3fnl5bf54+NR////ARq8
        8EUZvPHFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAmf8FHL32GwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/D8AAPAPAADgBwAAwAcAAMADAADAAwAAwAMAAMAD
        AADgBwAA4AcAAPAPAAD8OwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALmH
        hzO4iooyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAuoiIZ7mKh2YAAAAAAAAAAP///wP75uY8+eTkhfnk5Kr55OTF+eTkxfnk5Kr55OSF++XlO///
        /wMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/V1Qb44+Nu+eXl5/nk5P/55OT/+eTk//nk5P/55OT/+eTk//nk
        5P/55OT/+eTk5vjl5Wz/1dUGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD55uYp+eTk2vnk5P/55OT/+eTk//nk5P/55OT/+eTk//nk
        5P/55OT/+eTk//nk5P/55OT/+eTk//nk5Nf45eUnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9+TkQfnk5PD55OT/+eTk//nk5P/55OT/+eTk//nk
        5P/55OT/+eTk//nk5P/55OT/+eTk//nk5P/55OT/+eTk//nk5O774+M/Wc77jFjN+mUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPfo6CH45OTrzsPI/7Krtf+tp7H/hoST/4aE
        lP+GhJT/hoSU/4aElP+GhJT/hoSU/4aElP+GhJT/hoSU/6Cbp/+yq7X/uLC5//jk5Oqg1u8+Wcj/FwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/29sH+eTk2fnk5P+SlKL/1ODk/73I
        z/9/iZX/lZ6o/5WeqP+Vnqj/lZ6o/5WeqP+Vnqj/lZ6o/5WeqP+Vnqj/jZaj/9Tg5P+Hj57/+eTk//nk
        5Nf/1dUGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA//8CWMz8Wr7d7on55OT/+eTk/5eZ
        p//v/P3/1d/k/3mBjv+LlJ//rbm+/42Wof+LlJ//i5Sf/4uUn/+LlJ//i5Sf/4uUn/+Xn6z/7/z9/5Wd
        q//55OT/+eTk//rl5WoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFrN+mBZzfv/Yc75/vXk
        5f/55OT/l5mn/+/8/f/V3+T/eYGO/4uUn/+LlJ//i5Sf/4uUn/+LlJ//i5Sf/4uUn/+LlJ//i5Sf/5ef
        rP/v/P3/lZ2r//nk5P/55OT/+uTk6f///wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWsz7QVnN
        +/t10ff/+OTk//nk5P+Xmaf/7/z9/9Xf5P95gY7/i5Sf/4uUn/+Nl6L/qLS6/4uUn/+LlJ//i5Sf/4uU
        n/+LlJ//l5+s/+/8/f+Vnav/+eTk//nk5P/55OT/++bmPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7ePmkfbk5f/55OT/+eTk/5eZp//v/P3/1d/k/3mBjv+LlJ//i5Sf/4uUn/+LlJ//i5Sf/4uU
        n/+LlJ//i5Sf/4uUn/+Xn6z/7/z9/5Wdq//55OT/+eTk//nk5P/54+OJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD76em7/PHx//nk5P/55OT/l5mn/+/8/f/V3+T/eYGO/4uUn/+LlJ//i5Sf/4uU
        n/+WoKj/pK+2/4uUn/+LlJ//i5Sf/5efrP/v/P3/lZ2r//nk5P/55OT/+eTk//nl5a4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPrv793++vr/+eTk//nk5P+Xmaf/7/z9/9Xf5P95gY7/kJqj/6m1
        u/+LlJ//i5Sf/4uUn/+LlJ//i5Sf/4uUn/+LlJ//l5+s/+/8/f+Vnav/+eTk//nk5P/55OT/+eTkyQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+eTkyvnk5P/55OT/+eTk/5eZp//v/P3/4u7x/5Kb
        p/+dpbH/naWx/52lsf+dpbH/naWx/52lsf+dpbH/naWx/52lsf+6xMz/7/z9/5Wdq//55OT/+eTk//nk
        5P/55OTJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD55OSx+eTk//nk5P/55OT/l5mn/+/8
        /f/v/P3/7/z9/+/8/f/v/P3/6PX3/+Lu8f/i7vH/5PDz/+/8/f/v/P3/7/z9/+/8/f/v/P3/lZ2r//nk
        5P/55OT/+eTk//nl5a4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPrk5Iz55OT/+eTk//nk
        5P+Xmaf/7/z9/+/8/f/v/P3/7/z9/+/8/f+bnpX/pqNy/6ajcv+GhnX/7/z9/+/8/f/v/P3/7/z9/+/8
        /f+Vnav/+eTk//nk5P/55OT/+ePjiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+OXlRfnk
        5P/55OT/zr3G/3uAkP+7xsz/4+/x/+/8/f/v/P3/7/z9/6Cjlv+7tnD/u7Zw/5KRd//v/P3/7/z9/+/8
        /f/b5un/vsrP/3N6i//Etb//+eTk//nk5P/35ORCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/zMwF+OTk6/nk5P9tY5X/Rz6e/2Fhlf+apLD/qrS8/7zHzf/c6ez/3Ofr/8fT2P/H09j/z9nf/+n2
        +P/Ez9T/ws/S/6y4vv9vcpr/SUOT/0tEhf/55OT/+uTk6f///wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD55eV2+eTk/9LAyv9nX5T/Rz6b/0c6rP9QTY//eoCd/7bDx//K1tr/yNPY/9Hb
        4P+3wsn/rbm+/4+XqP9cXZH/SUCk/0c8qP9VT5H/raC3//nl5f/45ORzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/b2wf55OTZ+eTk//nk5P/p1tj/jIKh/1VOl/9HO7T/Rj+U/1pb
        jP+gqrT/rbe7/25ylv9KRYz/RTqo/05Fm/9za5f/08HJ//nk5P/77+//+ujo3P/V1QYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPnj4y755OTz+eTk//nk5P/55OT/+eTk/9C/
        xv97cJv/Ukmc/0c6rP9HPqT/TUKm/25kmv+vobP/9uHh//nk5P/55OT/+eTk//nk5PL54+MtAAAAALyH
        hyKxiYkNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPfk5EH55OTw+eTk//nk
        5P/55OT/+eTk//nk5P/v29z/n5Gp/4Z8nf/ezM//+eTk//nk5P/55OT/+eTk//nk5P/55OTu++PjPwAA
        AAAAAAAAuIiIn7eJiVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPnm
        5in55OTa+eTk//nk5P/55OT/+eTk//nk5P/55OT/+eTk//nk5P/55OT/+eTk//nk5P/55OT/+eTk1/jl
        5ScAAAAAAAAAABzG/wkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/V1Qb44+Nu+uTk6Pnk5P/55OT/+eTk//nk5P/55OT/+eTk//nk5P/55OT/+eTk5vjl
        5Wz/1dUGAAAAAAAAAAAavPFuGbzx/hi88IkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8E+OXlRPjk5JX55OS0+eTkyfnk5Mj55OS0+uPjlPfk
        5EP///8DAAAAAAAAAAAAAAAAGrvyPBm88aEZvPH/GrzyvgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgv+8QGr/yFBq88W4au+4eAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////+B///+AH//+AAf//AAC//gAAf/wA
        AD/4AAA/8AAAH/AAAB/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/4AAAf+AAAH/wAAD/8AAA//gAAf/8A
        AO//gAH//+AHz//4H4//////////////////////
</value>
  </data>
</root>